{"version":3,"sources":["api/api.js","hooks/hooks.js","store/store.js","store/index.js","hooks/index.js","components/Spinner/Spinner.js","components/Spinner/index.js","components/LoadingScreen/index.js","components/LoadingScreen/LoadingScreen.js","routes/Routes.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["KEY","getData","a","localStorage","getItem","value","JSON","parse","updateData","data","setItem","stringify","fetchInitialData","demoData","success","createCollection","collection","nextCollection","id","uuidV4","collections","updateCollection","photos","map","createPhotos","photoUrls","url","createPhoto","photo","push","getLocation","latitude","longitude","Promise","resolve","reject","fetch","response","json","location","img","Image","onload","exifr","CreateDate","ImageHeight","ImageWidth","address","name","city","country","suburb","town","metro","join","created","origHeight","origWidth","src","useStore","useContext","StoreContext","useFetchInitialData","dispatch","fetchInitialDataApi","payload","type","ACTIONS","SET_INITIAL_DATA","getCollection","state","collectionId","byId","useCollection","useCollections","allIds","usePhoto","photoId","useCreatePhotos","urls","createPhotosApi","useCreateCollection","createCollectionApi","CREATE_COLLECTION","useUpdateCollection","updateCollectionApi","UPDATE_COLLECTION","useMapPosition","useMemo","mapPosition","position","SET_MAP_POSITION","SET_ROUTES_DATA","initialState","routesData","current","previous","isLoading","bounds","center","zoom","reducer","action","photosById","photosIds","createCollectionReducer","setRoutesDataReducer","allCollectionsIds","allPhotosIds","collectionsById","forEach","setInitialDataReducer","setMapPositionReducer","Set","updateCollectionReducer","Error","createContext","StoreProvider","children","useReducer","Provider","Spinner","className","viewBox","cx","cy","r","fill","strokeMiterlimit","strokeWidth","LoadingScreen","List","lazy","Collection","Photo","Upload","Routes","useLocation","useEffect","AnimatePresence","initial","fallback","component","path","pathname","App","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d5d3b86.chunk.js","sourcesContent":["import exifr from 'exifr';\nimport { v4 as uuidV4 } from 'uuid';\nimport demoData from './demo-data.json';\n\nconst KEY = 'travel_photos';\n\nconst getData = async () => {\n  let value = await localStorage.getItem(KEY);\n  value = JSON.parse(value);\n\n  return value;\n};\n\nconst updateData = async (data) => {\n  await localStorage.setItem(KEY, JSON.stringify(data));\n};\n\nexport const fetchInitialData = async () => {\n  let data = await getData();\n\n  if (data === null) {\n    data = demoData;\n    await updateData(data);\n  }\n\n  return {\n    data,\n    success: true,\n  };\n};\n\nexport const createCollection = async (collection) => {\n  const nextCollection = {\n    ...collection,\n    id: uuidV4(),\n  };\n\n  const data = await getData();\n  updateData({\n    ...data,\n    collections: [...data.collections, nextCollection],\n  });\n\n  return {\n    data: nextCollection,\n    success: true,\n  };\n};\n\nexport const updateCollection = async ({ collection, photos }) => {\n  const nextCollection = {\n    ...collection,\n    photos: [...collection.photos, ...photos],\n  };\n\n  const data = await getData();\n  updateData({\n    ...data,\n    collections: data.collections.map((collection) => {\n      if (collection.id === nextCollection.id) {\n        return nextCollection;\n      }\n      return collection;\n    }),\n  });\n\n  return {\n    data: nextCollection,\n    success: true,\n  };\n};\n\nexport const createPhotos = async (photoUrls) => {\n  const photos = [];\n\n  for (const url of photoUrls) {\n    const photo = await createPhoto(url);\n\n    photos.push(photo.data);\n  }\n\n  return {\n    data: photos,\n    success: true,\n  };\n};\n\nconst getLocation = async ({ latitude, longitude }) => {\n  return new Promise(async (resolve, reject) => {\n    const response = await fetch(\n      `https://nominatim.openstreetmap.org/reverse?lat=${latitude}&lon=${longitude}&format=json`\n    );\n    const location = await response.json();\n    resolve(location);\n  });\n};\n\nconst createPhoto = async (url) => {\n  return new Promise((resolve, reject) => {\n    let photo = {\n      id: uuidV4(),\n      url,\n    };\n\n    const img = new Image();\n    img.onload = async () => {\n      let { CreateDate, ImageHeight, ImageWidth, latitude, longitude } =\n        (await exifr.parse(url)) || {};\n\n      if (latitude && longitude) {\n        const location = await getLocation({ latitude, longitude });\n\n        const address = [];\n        let name = '';\n        if (location) {\n          const { city, country, suburb, town } = location.address;\n          let metro;\n\n          if (city) {\n            metro = city;\n          } else if (town) {\n            metro = town;\n          }\n\n          if (suburb && metro !== suburb) {\n            address.push(suburb);\n          }\n\n          if (metro) {\n            address.push(metro);\n          }\n\n          if (country) {\n            address.push(country);\n          }\n\n          name = address.join(', ');\n        }\n        photo = {\n          ...photo,\n          created: CreateDate,\n          latitude,\n          location,\n          longitude,\n          origHeight: ImageHeight,\n          origWidth: ImageWidth,\n          name,\n        };\n      }\n\n      resolve({\n        data: photo,\n        success: true,\n      });\n    };\n    img.src = url;\n  });\n};\n","import { useContext, useMemo } from 'react';\nimport { ACTIONS, StoreContext } from '../store';\nimport {\n  createCollection as createCollectionApi,\n  createPhotos as createPhotosApi,\n  fetchInitialData as fetchInitialDataApi,\n  updateCollection as updateCollectionApi,\n} from '../api';\n\nexport const useStore = () => {\n  const store = useContext(StoreContext);\n\n  return store;\n};\n\nexport const useFetchInitialData = () => {\n  const { dispatch } = useStore();\n\n  const fetchInitialData = async () => {\n    const response = await fetchInitialDataApi();\n\n    dispatch({\n      payload: response.data,\n      type: ACTIONS.SET_INITIAL_DATA,\n    });\n  };\n\n  return fetchInitialData;\n};\n\nconst getCollection = (state, collectionId) => {\n  const collection = state.collections.byId[collectionId];\n\n  if (!collection) {\n    return;\n  }\n\n  return {\n    ...collection,\n    photos: collection.photos.map((id) => {\n      return state.photos.byId[id];\n    }),\n  };\n};\n\nexport const useCollection = (collectionId) => {\n  const { state } = useStore();\n\n  return getCollection(state, collectionId);\n};\n\nexport const useCollections = () => {\n  const { state } = useStore();\n\n  return state.collections.allIds.map((id) => {\n    return getCollection(state, id);\n  });\n};\n\nexport const usePhoto = (photoId) => {\n  const { state } = useStore();\n\n  return state.photos.byId[photoId];\n};\n\nexport const useCreatePhotos = () => {\n  const createPhotos = async (urls) => {\n    return await createPhotosApi(urls);\n  };\n\n  return createPhotos;\n};\n\nexport const useCreateCollection = () => {\n  const { dispatch } = useStore();\n\n  const createCollection = async ({ collection, photos }) => {\n    const response = await createCollectionApi({\n      ...collection,\n      photos,\n    });\n\n    dispatch({\n      payload: response.data,\n      type: ACTIONS.CREATE_COLLECTION,\n    });\n  };\n\n  return createCollection;\n};\n\nexport const useUpdateCollection = () => {\n  const { dispatch, state } = useStore();\n\n  const updateCollection = async (collection, photos) => {\n    const response = await updateCollectionApi({\n      ...state.collections.byId[collection.id],\n      ...collection,\n      photos,\n    });\n\n    dispatch({\n      payload: response.data,\n      type: ACTIONS.UPDATE_COLLECTION,\n    });\n  };\n\n  return updateCollection;\n};\n\nexport const useMapPosition = () => {\n  const { dispatch, state } = useStore();\n\n  const mapPosition = useMemo(() => {\n    return state.mapPosition;\n  }, [state.mapPosition]);\n\n  const setMapPosition = (position) => {\n    dispatch({\n      payload: position,\n      type: ACTIONS.SET_MAP_POSITION,\n    });\n  };\n\n  return [mapPosition, setMapPosition];\n};\n\nexport const useRoutesData = () => {\n  const { dispatch, state } = useStore();\n\n  const routesData = useMemo(() => {\n    return state.routesData;\n  }, [state.routesData]);\n\n  const setRoutesData = (routesData) => {\n    dispatch({\n      payload: routesData,\n      type: ACTIONS.SET_ROUTES_DATA,\n    });\n  };\n\n  return [routesData, setRoutesData];\n};\n","import { createContext, useReducer } from 'react';\n\nexport const ACTIONS = {\n  CREATE_COLLECTION: 'createCollection',\n  SET_INITIAL_DATA: 'setInitialData',\n  SET_MAP_POSITION: 'setMapPosition',\n  SET_ROUTES_DATA: 'setRoutesData',\n  UPDATE_COLLECTION: 'updateCollection',\n};\n\nconst initialState = {\n  collections: {\n    allIds: [],\n    byId: [],\n  },\n  routesData: {\n    current: null,\n    previous: null,\n  },\n  isLoading: true,\n  mapPosition: {\n    bounds: null,\n    center: null,\n    zoom: null,\n  },\n  photos: {\n    allIds: [],\n    byId: [],\n  },\n};\n\nconst setInitialDataReducer = (state, { collections }) => {\n  const allCollectionsIds = [];\n  const allPhotosIds = [];\n  const collectionsById = {};\n  const photosById = {};\n\n  collections.forEach((collection) => {\n    allCollectionsIds.push(collection.id);\n    collectionsById[collection.id] = {\n      ...collection,\n      photos: collection.photos.map(({ id }) => {\n        return id;\n      }),\n    };\n\n    collection.photos.forEach((photo) => {\n      allPhotosIds.push(photo.id);\n      photosById[photo.id] = photo;\n    });\n  });\n\n  return {\n    ...state,\n    collections: {\n      allIds: allCollectionsIds,\n      byId: collectionsById,\n    },\n    isLoading: false,\n    photos: {\n      allIds: allPhotosIds,\n      byId: photosById,\n    },\n  };\n};\n\nconst createCollectionReducer = (state, collection) => {\n  const photosById = {};\n  const photosIds = collection.photos.map((photo) => {\n    photosById[photo.id] = photo;\n\n    return photo.id;\n  });\n\n  return {\n    ...state,\n    collections: {\n      allIds: [...state.collections.allIds, collection.id],\n      byId: {\n        ...state.collections.byId,\n        [collection.id]: {\n          ...collection,\n          photos: photosIds,\n        },\n      },\n    },\n    photos: {\n      allIds: [...state.photos.allIds, ...photosIds],\n      byId: {\n        ...state.photos.byId,\n        ...photosById,\n      },\n    },\n  };\n};\n\nconst updateCollectionReducer = (state, collection) => {\n  const photosById = {};\n  const allPhotosIds = collection.photos.map((photo) => {\n    photosById[photo.id] = photo;\n\n    return photo.id;\n  });\n\n  return {\n    ...state,\n    collections: {\n      ...state.collections,\n      byId: {\n        ...state.collections.byId,\n        [collection.id]: collection,\n      },\n    },\n    photos: {\n      // use Set to dedupe\n      allIds: new Set([...state.photos.allIds, ...allPhotosIds]),\n      byId: {\n        ...state.photos.byId,\n        ...photosById,\n      },\n    },\n  };\n};\n\nconst setMapPositionReducer = (state, mapPosition) => {\n  return {\n    ...state,\n    mapPosition,\n  };\n};\n\nconst setRoutesDataReducer = (state, routesData) => {\n  return {\n    ...state,\n    routesData: {\n      ...state.routesData,\n      ...routesData,\n    },\n  };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.CREATE_COLLECTION:\n      return createCollectionReducer(state, action.payload);\n\n    case ACTIONS.SET_ROUTES_DATA:\n      return setRoutesDataReducer(state, action.payload);\n\n    case ACTIONS.SET_INITIAL_DATA:\n      return setInitialDataReducer(state, action.payload);\n\n    case ACTIONS.SET_MAP_POSITION:\n      return setMapPositionReducer(state, action.payload);\n\n    case ACTIONS.UPDATE_COLLECTION:\n      return updateCollectionReducer(state, action.payload);\n\n    default:\n      throw new Error();\n  }\n};\n\nexport const StoreContext = createContext(initialState);\n\nconst StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <StoreContext.Provider value={{ dispatch, state }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport default StoreProvider;\n","import StoreProvider from './store';\nexport { ACTIONS, StoreContext } from './store';\n\nexport default StoreProvider;\n","export {\n  useCollection,\n  useCollections,\n  useCreateCollection,\n  useFetchInitialData,\n  useMapPosition,\n  usePhoto,\n  useStore,\n  useUpdateCollection,\n} from './hooks';\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className={'spinner'}>\n      <div className={'loader'}>\n        <svg className={'circle'} viewBox=\"25 25 50 50\">\n          <circle\n            className={'path'}\n            cx=\"50\"\n            cy=\"50\"\n            r=\"15\"\n            fill=\"none\"\n            strokeMiterlimit=\"10\"\n            strokeWidth=\"3\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import LoadingScreen from './LoadingScreen';\n\nexport default LoadingScreen;\n","import React from 'react';\nimport Spinner from '../Spinner';\nimport './LoadingScreen.css';\n\nconst LoadingScreen = () => {\n  return (\n    <div className={'loading_screen'}>\n      <Spinner />\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","import { lazy, Suspense, useEffect } from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { AnimatePresence } from 'framer-motion';\n\nimport './routes.css';\nimport { useFetchInitialData, useStore } from '../hooks';\nimport LoadingScreen from '../components/LoadingScreen';\n//import { useRoutesData } from '../hooks/hooks';\n\nconst List = lazy(() => import('../views/List'));\nconst Collection = lazy(() => import('../views/Collection'));\nconst Photo = lazy(() => import('../views/Photo'));\nconst Upload = lazy(() => import('../views/Upload'));\n\nconst Routes = () => {\n  const { state } = useStore();\n  const location = useLocation();\n  const fetchInitialData = useFetchInitialData();\n  //const [routesData, setRoutesData] = useRoutesData();\n\n  useEffect(() => {\n    if (state.isLoading) {\n      fetchInitialData();\n    }\n  }, [fetchInitialData, state.isLoading]);\n\n  /* useEffect(() => {\n    setRoutesData({\n      current: location.pathname,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); */\n\n  if (state.isLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <AnimatePresence initial={false}>\n      <Suspense fallback={<LoadingScreen />}>\n        <Switch key={location.pathname} location={location}>\n          <Route\n            component={Photo}\n            path={'/collection/:collectionId/photo/:id'}\n          />\n          <Route component={Collection} path={'/collection/:collectionId'} />\n          <Route component={Upload} path={'/upload'} />\n          <Route component={List} path={'/'} />\n        </Switch>\n      </Suspense>\n    </AnimatePresence>\n  );\n};\n\nexport default Routes;\n","import Routes from './Routes';\n\nexport default Routes;\n","import { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './routes';\nimport StoreProvider from './store';\n\nconst App = () => {\n  return (\n    <StoreProvider>\n      <Router basename=\"/travel-photos\">\n        <Routes />\n      </Router>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}